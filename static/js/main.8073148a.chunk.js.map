{"version":3,"sources":["assets/imgs/profile.jpg","services/storageService.js","actions/weatherActions.js","actions/systemActions.js","services/weatherService.js","cmps/Search.jsx","services/customHooks.js","cmps/ForcastCard.jsx","cmps/WeatherList.jsx","cmps/WeatherHeadLines.jsx","cmps/WeatherForcast.jsx","pages/MainApp.jsx","pages/Favorites.jsx","cmps/Navbar.jsx","pages/About.jsx","cmps/LoaderContainer.jsx","App.jsx","serviceWorker.js","reducers/systemReducer.js","reducers/weatherReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","_setCity","cityName","type","_setFavoriteCities","favoriteCities","toggleInitialLoad","dispatch","getState","a","async","systemReducer","wasInitialLoad","API_KEY","process","weatherService","callCityWeather","value","axios","get","citiesData","cities","data","console","log","callCities","Search","useDispatch","useState","setCities","initialState","cb","fields","setFields","useEffect","event","target","name","useForm","city","handleChange","onSelectCity","preventDefault","setCity","backgroundGlass","className","onSubmit","autoComplete","list","id","onChange","map","idx","LocalizedName","ForcastCard","day","degreeType","useSelector","state","weatherReducer","EpochDate","Temperature","Day","currDate","Date","dateHelper","num","getDegreeToShow","degreeInFar","Maximum","Value","degree","unitSymbol","toFixed","src","iconNumber","Icon","getDayIconNumber","alt","getDay","getWeekDay","date","setUTCSeconds","year","getFullYear","month","getMonth","getDate","IconPhrase","WeatherList","forcast","WeatherHeadLines","Text","isFavorite","setCurrentForcast","onClick","WeatherForcast","headLine","Key","checkIsFavoriteCity","findIndex","cityToRemove","favoriteCity","filter","xmlns","viewBox","d","MainApp","setForcast","cityForcast","getForcast","main","variants","in","opacity","x","out","transition","duration","exit","animate","initial","DailyForecasts","Headline","Favorites","forcasts","setForcasts","length","Promise","all","getFavoriteCitiesForcasts","section","overflowX","inLessThenTwoFavorites","smooth","to","toggleType","Navbar","ref","handler","btnMode","toggleBtnMode","isShowModal","setIsShowModal","elModal","useRef","listener","current","contains","document","addEventListener","removeEventListener","modalShowClass","checked","About","window","scrollTo","y","require","href","LoaderContainer","color","height","width","App","location","useLocation","isLoading","pathname","path","component","Boolean","hostname","match","filterBy","AdministrativeArea","ID","Country","rootReducer","combineReducers","action","items","item","_id","itemId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8073148a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.36e27b4d.jpg\";","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from '../services/storageService';\r\n\r\n// Dispatchers\r\nconst _setCity = (cityName) => ({ type: 'SET_CITY', cityName });\r\nconst _setFavoriteCities = (favoriteCities) => ({ type: 'SET_FAVORITE_CITIES', favoriteCities });\r\n\r\n// THUNK\r\n\r\nexport function setCity(cityName) {\r\n    return async (dispatch) => {\r\n        dispatch(_setCity(cityName));\r\n    }\r\n}\r\nexport function saveFavoriteCity(favoriteCity) {\r\n    return async (dispatch,getState) => {\r\n        const {favoriteCities} = getState().weatherReducer\r\n        storageService.saveToStorage('favoriteCities',[...favoriteCities,favoriteCity])\r\n        dispatch({ type:\"ADD_FAVORITE\", favoriteCity })\r\n        \r\n    }\r\n}\r\nexport function removeCityFromFavorites(cityToRemove) {\r\n    return async (dispatch,getState) => {\r\n        let {favoriteCities} = getState().weatherReducer\r\n        favoriteCities = favoriteCities.filter(city =>{\r\n            return city.Key !== cityToRemove.Key\r\n        })\r\n        storageService.saveToStorage('favoriteCities',favoriteCities)\r\n        dispatch({ type:\"REMOVE_FAVORITE\", cityToRemove })\r\n        \r\n    }\r\n}\r\nexport function loadFavoriteCities() {\r\n    return async (dispatch) => {\r\n        const favoriteCities = await storageService.loadFromStorage('favoriteCities');\r\n        if(favoriteCities) dispatch(_setFavoriteCities(favoriteCities));\r\n        \r\n    }\r\n}\r\nexport function toggleDegreeType() {\r\n    return async (dispatch) => {\r\n       dispatch({type:'TOGGLE_DEGREE_TYPE'});\r\n        \r\n    }\r\n}\r\n\r\n","\r\nimport { storageService } from '../services/storageService';\r\n\r\nexport const loading = () => ({ type: 'LOADING_START' });\r\nexport const doneLoading =() => ({ type: 'LOADING_DONE' });\r\n\r\nexport function toggleInitialLoad() {\r\n    return async (dispatch, getState) => {\r\n        const { wasInitialLoad } = getState().systemReducer;\r\n        if(!wasInitialLoad) storageService.saveToStorage('weatherAppInitialLoad',true)\r\n        else storageService.saveToStorage('weatherAppInitialLoad',false)\r\n        dispatch({ type: 'TOGGLE_INITIAL_LOAD' })\r\n    }\r\n}\r\n\r\n","// import {storageService} from '../services/storageService'\r\nimport axios from 'axios'\r\n\r\nconst STORAGE_KEY = 'cities';\r\nconst FORCAST_KEY = 'forcast';\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n// const API_KEY2 = process.env.REACT_APP_WEATHER_API_KEY_2;\r\nexport const weatherService = {\r\n    callCityWeather,\r\n    callCities\r\n}\r\n// let gCities = storageService.loadFromStorage(STORAGE_KEY) \r\n// let gForcast = storageService.loadFromStorage(FORCAST_KEY) \r\n\r\nexport async function callCities(value) {\r\n\r\n    // return Promise.resolve(gCities)\r\n    try{\r\n    var citiesData = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${value.cityName}`)\r\n    const cities = citiesData.data;\r\n    return cities\r\n    }\r\n    catch(err){\r\n        console.log('Err',err)\r\n    }\r\n}\r\nexport async function callCityWeather(value) {\r\n\r\n    \r\n    // return Promise.resolve(gForcast)\r\n    try{\r\n    var citiesData = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${value}?apikey=${API_KEY}`)\r\n    const cities = citiesData.data;\r\n    return cities\r\n    }\r\n    catch{\r\n        console.log('Err')\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCity } from '../actions/weatherActions'\r\nimport { weatherService } from '../services/weatherService';\r\nimport { useForm } from '../services/customHooks';\r\n\r\n\r\nexport function Search() {\r\n    const dispatch = useDispatch()\r\n    const [cities, setCities] = useState(null)\r\n    const [city, handleChange] = useForm({ cityName: '' }, setCitiesList)\r\n\r\n\r\n    async function setCitiesList(name) {\r\n        if (!name) return\r\n        const cities = await weatherService.callCities(name)\r\n        setCities(cities)\r\n\r\n    }\r\n    function onSelectCity(event) {\r\n        event.preventDefault()\r\n        dispatch(setCity(cities[0]) || cities)\r\n    }\r\n    const { cityName } = city\r\n    const backgroundGlass = cityName ? '' : 'background-glass'\r\n    return (\r\n        <section className=\"search\">\r\n            <form onSubmit={event => onSelectCity(event)}>\r\n                <input className={backgroundGlass} autoComplete=\"off\" list=\"city-ul\" name=\"cityName\" id=\"city\" value={cityName} onChange={handleChange} />\r\n            </form>\r\n            {city && <datalist id=\"city-ul\">\r\n                {cities && cities.map((city, idx) => {\r\n                    const cityName = city.LocalizedName\r\n                    return (<option key={idx} value={cityName} > {cityName} </option>)\r\n                })}\r\n            </datalist>}\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n        },\r\n    ];\r\n}\r\nexport function useOnClickOutside(ref, handler) {\r\n    useEffect(\r\n      () => {\r\n        const listener = event => {\r\n          // Do nothing if clicking ref's element or descendent elements\r\n          if (!ref.current || ref.current.contains(event.target)) {\r\n            return;\r\n          }\r\n  \r\n          handler(event);\r\n        };\r\n  \r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener);\r\n  \r\n        return () => {\r\n          document.removeEventListener('mousedown', listener);\r\n          document.removeEventListener('touchstart', listener);\r\n        };\r\n      },\r\n      // Add ref and handler to effect dependencies\r\n      // It's worth noting that because passed in handler is a new ...\r\n      // ... function on every render that will cause this effect ...\r\n      // ... callback/cleanup to run every render. It's not a big deal ...\r\n      // ... but to optimize you can wrap handler in useCallback before ...\r\n      // ... passing it into this hook.\r\n      [ref, handler]\r\n    );\r\n  }\r\n  ","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function ForcastCard({ day }) {\r\n    const { degreeType } = useSelector(state => state.weatherReducer)\r\n    const { EpochDate, Temperature, Day } = day\r\n    const currDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n\r\n    function getDate(EpochDate) {\r\n        currDate.setUTCSeconds(EpochDate);\r\n        var year = currDate.getFullYear();\r\n        var month = dateHelper(currDate.getMonth() + 1)\r\n        var day = dateHelper(currDate.getDate())\r\n        return `${day}/${month}/${year}`\r\n    }\r\n    function dateHelper(num) {\r\n        return (num < 10) ? '0' + num : '' + num\r\n    }\r\n    function getWeekDay() {\r\n        const currDate = new Date(day.Date).getDay()\r\n        switch (currDate) {\r\n            case 0:\r\n                return 'Sun'\r\n            case 1:\r\n                return 'Mon'\r\n            case 2:\r\n                return 'Tus'\r\n            case 3:\r\n                return 'Wen'\r\n            case 4:\r\n                return 'Thu'\r\n            case 5:\r\n                return 'Fri'\r\n            case 6:\r\n                return 'Sat'\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getDayIconNumber() {\r\n        let iconNumber = Day.Icon\r\n        if (Day.Icon < 10) iconNumber = `0` + Day.Icon\r\n        return iconNumber\r\n    }\r\n    function getDegreeToShow() {\r\n        let degreeInFar = Temperature.Maximum.Value\r\n        if (degreeType) return{\r\n            degree:degreeInFar,\r\n            unitSymbol:'F'\r\n        } \r\n        else return{\r\n            degree:(degreeInFar - 32) / 1.8.toFixed(),\r\n            unitSymbol:'C'\r\n        } \r\n    }\r\n\r\n    return (\r\n        <article className=\"forcast-card flex column align-center \">\r\n            <div className=\"icon-container\">\r\n                <img src={`https://developer.accuweather.com/sites/default/files/${getDayIconNumber()}-s.png`} alt=\"\" />\r\n            </div>\r\n            <section className=\"forcast-details\">\r\n                <div className=\"card-top\">\r\n                    <h2>{getWeekDay(day.date)}</h2>\r\n                    <h2>{getDate(EpochDate)}</h2>\r\n                </div>\r\n                <div className=\"card-bottom\">\r\n                    <p>{Day.IconPhrase}</p>\r\n                    <h3>{getDegreeToShow().degree}<span>{(getDegreeToShow().unitSymbol)}</span></h3>\r\n                </div>\r\n            </section>\r\n        </article>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { ForcastCard } from '../cmps/ForcastCard'\r\nexport function WeatherList({forcast}) {\r\n    return (\r\n            <ul className=\"forcast-list\">\r\n                {\r\n                    forcast.map((day, idx) => <li key={idx}>\r\n                        <ForcastCard day={day}/>\r\n                        </li>)\r\n                }\r\n            </ul>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function WeatherHeadLines({ LocalizedName, Text, isFavorite = false, setCurrentForcast = null, city = null }) {\r\n    return (\r\n        <div className=\"headlines\">\r\n            <h1>  {LocalizedName}</h1> <br />\r\n            <h1>{Text}</h1>\r\n            {isFavorite && <button onClick={() => setCurrentForcast(city)}>Show weather</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherHeadLines;","import React from 'react';\r\nimport { WeatherList } from '../cmps/WeatherList'\r\nimport { WeatherHeadLines } from '../cmps/WeatherHeadLines'\r\nimport { saveFavoriteCity, removeCityFromFavorites } from '../actions/weatherActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport function WeatherForcast({ forcast, city, headLine }) {\r\n    const dispatch = useDispatch();\r\n    const { favoriteCities } = useSelector(state => state.weatherReducer);\r\n    const { LocalizedName,Key } = city;\r\n    const { Text } = headLine;\r\n\r\n    function onToggleFavorite() {\r\n        if (!checkIsFavoriteCity()) dispatch(saveFavoriteCity(city));\r\n        else dispatch(removeCityFromFavorites(city));\r\n    }\r\n\r\n    function checkIsFavoriteCity(){\r\n        if(favoriteCities){\r\n        const favoriteCityIdx =  favoriteCities.findIndex(city =>city.Key === Key )\r\n        if (favoriteCityIdx === -1) return false\r\n        else return true\r\n        }\r\n        else return null\r\n    }\r\n    return (\r\n        <section className=\"forcast-container\">\r\n            <WeatherHeadLines LocalizedName={LocalizedName} Text={Text} />\r\n            <p className=\"like-btn\"><span onClick={onToggleFavorite}>\r\n                <svg className = {checkIsFavoriteCity() ? 'favorite-city':''} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" ><path d=\"M25 39.7l-.6-.5C11.5 28.7 8 25 8 19c0-5 4-9 9-9 4.1 0 6.4 2.3 8 4.1 1.6-1.8 3.9-4.1 8-4.1 5 0 9 4 9 9 0 6-3.5 9.7-16.4 20.2l-.6.5zM17 12c-3.9 0-7 3.1-7 7 0 5.1 3.2 8.5 15 18.1 11.8-9.6 15-13 15-18.1 0-3.9-3.1-7-7-7-3.5 0-5.4 2.1-6.9 3.8L25 17.1l-1.1-1.3C22.4 14.1 20.5 12 17 12z\" /></svg>\r\n            </span></p>\r\n            <WeatherList forcast={forcast} />\r\n        </section>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Search } from '../cmps/Search'\r\nimport { WeatherForcast } from '../cmps/WeatherForcast'\r\nimport { weatherService } from '../services/weatherService';\r\nimport {  useSelector,useDispatch } from 'react-redux'\r\nimport { motion } from 'framer-motion'\r\nimport {loading,doneLoading} from '../actions/systemActions'\r\n\r\nexport function MainApp() {\r\n\r\n  const { city } = useSelector(state => state.weatherReducer)\r\n  const { wasInitialLoad } = useSelector(state => state.systemReducer)\r\n  const [forcast, setForcast] = useState(null) \r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (city) getForcast(city)\r\n  }, [city])\r\n\r\n  async function getForcast(city) {\r\n    dispatch(loading())\r\n    const cityForcast = await weatherService.callCityWeather(city.Key)\r\n    setForcast(cityForcast)\r\n    dispatch(doneLoading())\r\n\r\n  }\r\n  let pageTransition={\r\n    in:{\r\n      opacity:1,\r\n      x:0\r\n    },\r\n    out:{\r\n      opacity:0,\r\n      x:'-100%',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.main className=\"main-app-container\" variants={pageTransition} transition={{duration:0.5}}  exit=\"out\" animate=\"in\" initial={wasInitialLoad ? 'out':null}>\r\n      <div className=\"top flex column align-center \">\r\n        <Search />\r\n      </div>\r\n      {forcast ?\r\n      <WeatherForcast  city={city} forcast={forcast.DailyForecasts} headLine={forcast.Headline} />\r\n      : <div> \r\n        <h1 className=\"error-msg\">OOPS! an error occoured, cold'nt load weather. </h1>\r\n        </div>}\r\n      \r\n\r\n    </motion.main >\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { WeatherForcast } from '../cmps/WeatherForcast'\r\nimport { weatherService } from '../services/weatherService';\r\nimport { motion } from 'framer-motion'\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport {loading,doneLoading} from '../actions/systemActions'\r\nexport function Favorites() {\r\n    const dispatch = useDispatch()\r\n    const { favoriteCities } = useSelector(state => state.weatherReducer)\r\n    const { wasInitialLoad } = useSelector(state => state.systemReducer)\r\n\r\n    const [forcasts, setForcasts] = useState(null)\r\n    useEffect(() => {\r\n        getFavoriteCitiesForcasts();\r\n    }, [favoriteCities])\r\n\r\n    async function getFavoriteCitiesForcasts() {\r\n        dispatch(loading());\r\n        if (!favoriteCities || !favoriteCities.length){\r\n            dispatch(doneLoading());\r\n\r\n            return\r\n\r\n        } \r\n        const forcasts = await Promise.all(favoriteCities.map(async city => {\r\n            const cityForcast = await weatherService.callCityWeather(city.Key);\r\n            return cityForcast\r\n        }))\r\n        setForcasts(forcasts);\r\n        dispatch(doneLoading());\r\n    }\r\n\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            x: 0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            x: '100%',\r\n            overflowX: 'hidden',\r\n        }\r\n    }\r\n    function inLessThenTwoFavorites(){\r\n        if(favoriteCities) return  favoriteCities.length <= 2 ? true : false;\r\n    } \r\n    return (\r\n        <motion.section className=\"favorites-page\" variants={pageTransition} transition={{ duration: 0.5 }} exit=\"out\" animate=\"in\" initial={wasInitialLoad ? 'out':null}>\r\n            {(favoriteCities&&!favoriteCities.length) && (\r\n                <div className=\"error-msg\">\r\n                    <h1>No favorite places </h1></div>)}\r\n            {(forcasts && (favoriteCities &&favoriteCities.length) ) ? (\r\n                <div className={`favorites-nav ${inLessThenTwoFavorites() ? 'short':'long'}`}>\r\n                     {favoriteCities.map((city) => {\r\n                         return <HashLink smooth key={city.LocalizedName}  to={`#${city.LocalizedName}`}  >{city.LocalizedName}</HashLink>  \r\n                     })}\r\n                </div>) : null}\r\n            {(forcasts && favoriteCities.length ) ? (\r\n                favoriteCities.map((city, idx) => {\r\n                   if (!forcasts[idx]) return( <div key={city.Key}> \r\n                    <h1  className=\"error-msg\">OOPS! an error occoured, cold'nt load weather for {city.LocalizedName}. </h1></div>)\r\n                return (\r\n                <div id={city.LocalizedName} key={city.Key}>\r\n                <WeatherForcast toggleType={false} headLine={forcasts[idx].Headline} city={city} key={city.Key} forcast={forcasts[idx].DailyForecasts} />\r\n                </div>)\r\n            })) :null}\r\n\r\n\r\n        </motion.section>\r\n    );\r\n}\r\n\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleDegreeType } from '../actions/weatherActions'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\nimport {useOnClickOutside} from '../services/customHooks'\r\n\r\nexport function Navbar() {\r\n    const dispatch = useDispatch()\r\n    const [btnMode, toggleBtnMode] = useState(false);\r\n    const [isShowModal, setIsShowModal] = useState(false);\r\n    const elModal = useRef()\r\n    useOnClickOutside(elModal, () => setIsShowModal(false));\r\n\r\n    function onToggleDegreeType() {\r\n        toggleBtnMode(!btnMode)\r\n        dispatch(toggleDegreeType());\r\n    }\r\n    const modalShowClass = () =>isShowModal ? '':'hide'\r\n    return (\r\n        <nav>\r\n            <div className=\"links-container\">\r\n                <div className=\"routing-links\">\r\n                <Link className='btn' to='/'>Home</Link>\r\n                <Link className='btn' to='/favorites'>Favorites  </Link>\r\n                <Link className='btn' to='/about'>About  </Link>\r\n                </div>\r\n                <span onClick={() => setIsShowModal(true)} className={'cursor-pointer'}>Preference</span>\r\n                     <div ref={elModal}  className={`preference-modal ${modalShowClass()}`} >\r\n                        <span>Cel</span>\r\n                        <label className={`switch ${modalShowClass()}`}>\r\n                            <input className={modalShowClass()} type=\"checkbox\" checked={btnMode} onChange={onToggleDegreeType} />\r\n                            <div></div>\r\n                        </label>\r\n                        <span>Far</span>\r\n                    </div>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function About() {\r\n  const { wasInitialLoad } = useSelector(state => state.systemReducer)\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  })\r\n  const pageTransition = {\r\n    in: {\r\n      opacity: 1,\r\n      y: 0\r\n    },\r\n    out: {\r\n      opacity: 0,\r\n      y: '100%',\r\n    }\r\n  }\r\n  return (\r\n    <motion.section className=\"about-container flex column align-center\" variants={pageTransition} transition={{ duration: 0.5 }} exit=\"out\" animate=\"in\" initial={wasInitialLoad ? 'out' : null}>\r\n      <div className=\"profile-img-container flex justify-center\">\r\n        <img src={require('../assets/imgs/profile.jpg')} alt=\"\" />\r\n      </div>\r\n      <div className=\"personal-txt-container\">\r\n        <h1>Hi! my name is Nadav Samuel and i'm a <span>Full-Stack</span> developer!</h1>\r\n        <p> I'm 22 years old, born in Givaataim, Israel.\r\n        Motivational fullstack web developer. People person and a team player.\r\n        <br />\r\n          <br />\r\n          <a target=\"_blank\" href=\"https://nadav-samuel-portfolio.herokuapp.com/#/\"> Check out my portfolio!</a>\r\n          <br />\r\n          <br />\r\n          <a target=\"_blank\" href=\"https://www.linkedin.com/in/nadav-samuel-0b51291b9/\"> Check out my linkedin page!</a>\r\n          <br />\r\n          <br />\r\n          <span>samuelna9@gmail.com </span>\r\n\r\n        </p>\r\n      </div>\r\n\r\n\r\n    </motion.section >\r\n  )\r\n}","import React from 'react';\r\nimport Loader from 'react-loader-spinner'\r\nexport function LoaderContainer() {\r\n    return (\r\n        <div className='loader-container'>\r\n           <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { loadFavoriteCities } from './actions/weatherActions';\nimport { toggleInitialLoad } from './actions/systemActions'\nimport { MainApp } from './pages/MainApp';\nimport { Favorites } from './pages/Favorites';\nimport { Navbar } from './cmps/Navbar';\nimport { About } from './pages/About';\nimport {LoaderContainer} from './cmps/LoaderContainer'\n\n\n\nfunction App() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(state => state.systemReducer)\n\n\n  useEffect(() => {\n    dispatch(toggleInitialLoad())\n    dispatch(loadFavoriteCities());\n    return () => {\n      dispatch(toggleInitialLoad())\n    }\n\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Navbar />\n        <AnimatePresence >\n          <Switch location={location} key={location.pathname}>\n            <Route path=\"/favorites\" component={Favorites} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" component={MainApp} />\n          </Switch>\n        </AnimatePresence>\n      </Router>\n      {isLoading && <LoaderContainer/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initialState = {\r\n  isLoading: false,\r\n  wasInitialLoad:false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n      case 'TOGGLE_INITIAL_LOAD':\r\n      return { ...state, wasInitialLoad: !state.wasInitialLoad };\r\n\r\n    default: return state;\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n    favoriteCities: [],\r\n    filterBy: null,\r\n    city: {\r\n        AdministrativeArea: { ID: \"LND\", LocalizedName: \"London\" },\r\n        Country: { ID: \"GB\", LocalizedName: \"United Kingdom\" },\r\n        ID: \"GB\",\r\n        LocalizedName: \"United Kingdom\",\r\n        Key: \"328328\",\r\n        LocalizedName: \"London\",\r\n        Rank: 10,\r\n        Type: \"City\",\r\n        Version: 1,\r\n    }\r\n\r\n}\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case 'SET_CITY':\r\n            return {\r\n                ...state,\r\n                city: action.cityName\r\n            }\r\n        case 'ADD_FAVORITE':\r\n            return {\r\n                ...state,\r\n                favoriteCities: [...state.favoriteCities, action.favoriteCity]\r\n            }\r\n        case 'REMOVE_FAVORITE':\r\n            return {\r\n                ...state,\r\n                favoriteCities: state.favoriteCities.filter(city => city.Key !== action.cityToRemove.Key)\r\n            }\r\n        case 'SET_FAVORITE_CITIES':\r\n            return {\r\n                ...state,\r\n                favoriteCities: action.favoriteCities\r\n            }\r\n        case 'TOGGLE_DEGREE_TYPE':\r\n            return {\r\n                ...state,\r\n                degreeType: !state.degreeType\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.items\r\n            }\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(item => {\r\n                    if (item._id === action.item._id) return action.item;\r\n                    return item;\r\n                })\r\n            }\r\n        case 'REMOVE_ITEM':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.itemId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport systemReducer from './systemReducer';\r\nimport { weatherReducer } from './weatherReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  systemReducer: systemReducer,\r\n  weatherReducer: weatherReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}